리덕스란 크로스 컴포넌트 또는 앱 와이드 상태를 위한 상태 관리 시스템
상태는 흔히 3가지 상태로 구분할 수 있음.
1. 로컬 상태
데이터가 변경되어서 하나의 컴포넌트에 속하는 UI에 영향을 미치는 상태
보통 useState를 사용해 컴포넌트 안에서 상태를 관리함, 혹 약간 복잡하다면 useReducer를 사용
2. 크로스 컴포넌트 상태
다수의 컴포넌트에 영향을 미치는 상태
예를 들어서 모달이 있음, prop drilling이 필요함
3. 앱 와이드 상태
다수의 컴포넌트가 아닌 애플리케이션의 모든 컴포넌트에 영향을 미치는 상태
예를 들면 사용자 인증이 있음, props drilling이 필요

리덕스는 리액트 컨텍스트와 같이 크로스 컴포넌트나 앱 와이드 상태관리를
단순화할 수 있게 도와줌
그렇다면 리액트 컨텍스트가 있는데 왜 리덕스가 필요한지?
리액트 컨텍스트의 단점
1. 리액트 컨텍스트를 사용하려면 설정, 상태관리가 복잡해짐
2. 성능 문제가 있음, 테마를 변경하거나 저빈도 업데이트에는 좋으나
데이터가 자주 변경되는 경우에는 좋지 않음

리덕스는 단 하나의 저장소를 가짐
리듀서 함수를 통해 저장소의 상태를 변경함
컴포넌트에서 action을 발송해 리듀서가 수행할 작업을 설명하게 함
그 후 리듀서는 액션을 통해 새로운 상태를 뱉어내고 저장소의 상태를 변경함